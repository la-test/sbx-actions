name: Docker

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/docker.yml'
      - 'docker/**'
      - 'src/**'
  pull_request:
    paths:
      - '.github/workflows/docker.yml'
      - 'docker/**'
      - 'src/**'
  workflow_dispatch:

env:
  # Update the docker/tofu/Dockerfile according to this version if needed
  TF_VERSION: "1.9.1"
jobs:
  main:
    name: Main
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3    

      - name: Verify Docker
        id: verify_docker
        run: |
          docker run --rm hello-world:latest > /dev/null
          docker rmi hello-world:latest > /dev/null
          docker version
          docker compose version

      - name: Cache docker images
        uses: AndreKurait/docker-cache@0.6.0
        with:
          key: |
            docker-${{ runner.os }}-${{ hashFiles(
              'docker-compose*.yml',
              'docker/**'
            ) }}

      - name: Fix goup membership
        id: fix_group
        run: |
          # Add the existing `runner` group to avoid the `docker` one
          sudo adduser runner runner
          echo "_GID=$(grep -E "^runner:" /etc/group | cut -d: -f3)" >> $GITHUB_ENV

      - name: Build images
        id: build_images
        run: |
          docker compose build --progress=plain \
          --build-arg uid=$(id -u) \
          --build-arg gid=${_GID} \
          --build-arg terraform_version=${TF_VERSION}

      - name: Verify Ansible version
        id: verify_ansible
        run: |
          AC_VERSION="$(grep -Po "(?<=ansible-core==).+" docker/ansible/requirements.txt)"
          docker compose run --entrypoint ansible ansible-controller --version \
          | tee /dev/stderr \
          | grep -q "core ${AC_VERSION}"

      - name: Verify Tofu version
        id: verify_tofu
        run: |
          docker compose run --entrypoint /usr/local/bin/tofu tofu-shell -version \
          | tee /dev/stderr \
          | grep -q "OpenTofu v${TF_VERSION}"

      # - name: Scan docker images
      #   id: scan_images
      #   uses: aquasecurity/trivy-action@0.31.0
      #   with:
      #     scan-type: 'image'
      #     image-ref: 'sbx-actions_ansible-controller:latest'
      #     trivy-config: './docker/trivy.yaml'
