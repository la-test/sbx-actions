name: Docker

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/docker.yml'
      - 'docker/**'
      - 'src/**'
  pull_request:
    paths:
      - '.github/workflows/docker.yml'
      - 'docker/**'
      - 'src/**'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        # TODO: Dynamic matrix with `docker-compose config --services` output
        # But this would require something like a dedicated version.sh entrypoint?
        include:
          - service-name: ansible-controller
            version-cmd: "ansible --version"
            version-cmd-in: "grep -Po '(?<=ansible-core==)[.\\d]+' docker/ansible/requirements.txt"
            version-cmd-out: "grep -Po '(?<=core )[.\\d]+'"
          - service-name: tofu-shell
            version-cmd: "tofu version"
            version-cmd-in: "grep -Po '(?<=opentofu:)[.\\d]+' docker/tofu/Dockerfile"
            version-cmd-out: "grep -Po '(?<=OpenTofu v)[.\\d]+'"
          - service-name: nodejs
            version-cmd: "node --version"
            version-cmd-in: "grep -Po '(?<=node:)[.\\d]+' docker/nodejs/Dockerfile"
            version-cmd-out: "grep -Po '(?<=v)[.\\d]+'"
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Prepare service
        id: prepare_service
        uses: LeastAuthority/setup-docker-image@137f365304672bf5ef01a6f3fbb34c5fd848ca15 # v1.0.0
        with:
          service-name: ${{ matrix.service-name }}

      - name: Verify version
        id: verify_version
        run: |
          echo "${{ matrix.version-cmd }}" | docker compose run --rm -T "${{ matrix.service-name }}" \
          | tee /dev/stderr \
          | ${{ matrix.version-cmd-out }} \
          | grep -q "$(${{ matrix.version-cmd-in }})"

      # - name: Scan docker images
      #   id: scan_images
      #   uses: aquasecurity/trivy-action@0.31.0
      #   with:
      #     scan-type: 'image'
      #     image-ref: 'sbx-actions_ansible-controller:latest'
      #     trivy-config: './docker/trivy.yaml'
